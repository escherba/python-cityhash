name: Build wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
          CIBW_ARCHS_WINDOWS: "AMD64"

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build-musllinux:
    name: Build musllinux wheels
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/musllinux_1_1_x86_64
      options: --privileged  # Needed for QEMU for aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install Python and cibuildwheel
        run: |
          apk add --no-cache python3 py3-pip bash
          pip3 install cibuildwheel

      - name: Build musllinux wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_PLATFORM: "linux"
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_ARCHS: "x86_64 aarch64"
          CIBW_MANYLINUX_X86_64_IMAGE: musllinux_1_1
          CIBW_MANYLINUX_AARCH64_IMAGE: musllinux_1_1

      - name: Upload musllinux wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels-musllinux
          path: wheelhouse/*.whl